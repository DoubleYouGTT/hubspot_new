% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/objects_mapper.R, R/objectsv3.R
\name{hs_delete_company}
\alias{hs_delete_company}
\alias{hs_delete_contact}
\alias{hs_delete_deal}
\alias{hs_delete_line_item}
\alias{hs_delete_product}
\alias{hs_delete_ticket}
\alias{hs_delete_object}
\title{Object delete}
\usage{
hs_delete_company(
  identifiers,
  token_path = hubspot_token_get(),
  apikey = hubspot_key_get()
)

hs_delete_contact(
  identifiers,
  token_path = hubspot_token_get(),
  apikey = hubspot_key_get()
)

hs_delete_deal(
  identifiers,
  token_path = hubspot_token_get(),
  apikey = hubspot_key_get()
)

hs_delete_line_item(
  identifiers,
  token_path = hubspot_token_get(),
  apikey = hubspot_key_get()
)

hs_delete_product(
  identifiers,
  token_path = hubspot_token_get(),
  apikey = hubspot_key_get()
)

hs_delete_ticket(
  identifiers,
  token_path = hubspot_token_get(),
  apikey = hubspot_key_get()
)

hs_delete_object(
  objecttype,
  identifiers,
  token_path = hubspot_token_get(),
  apikey = hubspot_key_get()
)
}
\arguments{
\item{identifiers}{One or more object identifiers (either \code{vid} or \code{id}) of the related object(s).}

\item{token_path}{Path to OAuth 2.0 token.
See \code{\link[=hubspot_token_create]{hubspot_token_create()}}.}

\item{apikey}{API key to work with Hubspot (only used if \code{token_path}
is \code{NULL}). See \code{\link[=hubspot_key_set]{hubspot_key_set()}}.}

\item{objecttype}{String name of the main object type.
Can be any of the default HubSpot objects (\code{contacts}, \code{companies}, \code{deals},
\code{tickets}, \code{line_items}, \code{products}, \code{quotes}) or a custom created object.}
}
\value{
This function always returns the same, an empty \code{raw} object.
If an incorrect input is provided, no warning or error will be given.

To see if an object/schema is properly deleted, use \code{hs_get_\emph{xxx}} to obtain
the same object/schema or use \code{hs_get_\emph{xxx}_list} to obtain
multiple objects. If the returning information does not contain the
object/schema, it is deleted correctly.
}
\description{
Delete one or multiple objects.

The functions take into account batch limits for the API. This limit
is 100 objects per batch API call, except for the 'contacts' object,
where the limit is 10 objects per batch API call.
}
\examples{
\dontrun{
oneproduct <- hs_delete_object(
  objecttype = "products",
  identifiers = 1
)
twoproducts <- hs_delete_object(
  objecttype = "products",
  identifiers = c(1,2)
)
}
}
